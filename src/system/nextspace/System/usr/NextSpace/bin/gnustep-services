#!/bin/sh
#               -*- Shell-script -*-
# Script to start/stop user level GNUstep services
# This script usually called when user session starts (e.g. .xinitrc or Workspace)
#
# $UID, $USER, $LOGFILE is defined in /etc/profile.d/nextspace.sh
#
# Copyright (c) 2004-2017 Sergii Stoian
#

. /etc/profile.d/nextspace.sh

case "$1" in

start)
	printf "Starting GNUstep services:"
	gdnc --daemon &
	printf " Notification Center"
	gpbs --daemon &
	printf ", Pasteboard"
	printf ".\n"
	;;  
stop)
	printf "Stopping GNUstep services:"
	pkill -U $USER -9 gpbs
	printf " Pasteboard"
	pkill -U $USER -9 gdnc
	printf ", Notification Center"
	printf ".\n"
	;;
status)
        printf "+------------------------------------+-------------+--------+\n"
        printf "|             Service                |   Status    |  PID   |\n"
        printf "+------------------------------------+-------------+--------+\n"
	if [ "$UID" = "0" ];
	then
            DO_PID=`ps auxw | grep -v grep | grep gdomap | awk '{print $2}'`
	    printf " Distributed Objects                  "
            if [ "$DO_PID" != "" ]; then
	        printf " running       $DO_PID"
            else
                printf " not running"
            fi
            printf "\n"

            DNC_PID=`ps auxw | grep $USER | grep gdnc | grep -v grep | grep GSPublic | awk '{print $2}'` 
            printf " Distributed Notification Center      "
            if [ "$DNC_PID" != "" ]; then
	        printf " running       $DNC_PID"
            else
                printf " not running"
            fi
            printf "\n"
        fi

        NC_PID=`ps auxw | grep $USER | grep gdnc | grep -v grep | grep -v GSPublic | awk '{print $2}'` 
	printf " Notification Center                  "
        if [ "$NC_PID" != "" ]; then
	    printf " running       $NC_PID"
        else
            printf " not running"
        fi
        printf "\n"

        PBS_PID=`ps auxw | grep $USER | grep -v grep | grep gpbs | awk '{print $2}'`
        printf " Pasteboard Service                   "
        if [ "$PBS_PID" != "" ]; then
	    printf " running       $PBS_PID"
        else
            printf " not running"
        fi
        printf "\n"
	;;
*)
	printf "Usage: $0 {start|stop|status}\n"
	exit 1
	;;
esac
